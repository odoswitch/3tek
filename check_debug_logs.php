<?php
echo "=== V√âRIFICATION DES LOGS DE D√âBOGAGE ===\n\n";

echo "üîç √âTAPE 1: V√©rification des logs de suppression...\n";

if (file_exists('var/log/dev.log')) {
    $logContent = file_get_contents('var/log/dev.log');
    $lines = explode("\n", $logContent);

    // Chercher les logs de suppression
    $deleteLogs = [];
    $libererLogs = [];

    foreach ($lines as $line) {
        if (strpos($line, 'DEBUG DELETE:') !== false) {
            $deleteLogs[] = $line;
        }
        if (strpos($line, 'DEBUG LIBERER:') !== false) {
            $libererLogs[] = $line;
        }
    }

    echo "Logs de suppression trouv√©s: " . count($deleteLogs) . "\n";
    foreach ($deleteLogs as $log) {
        echo "- " . $log . "\n";
    }

    echo "\nLogs de lib√©ration trouv√©s: " . count($libererLogs) . "\n";
    foreach ($libererLogs as $log) {
        echo "- " . $log . "\n";
    }

    if (count($deleteLogs) == 0) {
        echo "‚ö†Ô∏è Aucun log de suppression trouv√© - la m√©thode deleteEntity n'est peut-√™tre pas appel√©e\n";
    }

    if (count($libererLogs) == 0) {
        echo "‚ö†Ô∏è Aucun log de lib√©ration trouv√© - la m√©thode libererLot n'est peut-√™tre pas appel√©e\n";
    }
} else {
    echo "‚ùå Fichier de log non trouv√©\n";
}

echo "\nüîç √âTAPE 2: V√©rification du statut des lots...\n";

$command = "php bin/console doctrine:query:sql \"SELECT id, name, statut, quantite, reserve_par_id FROM lot ORDER BY id DESC LIMIT 3\"";
exec($command, $output, $returnCode);

if ($returnCode === 0 && !empty($output)) {
    echo "Statut des lots :\n";
    foreach ($output as $line) {
        if (strpos($line, '|') !== false) {
            echo "- " . $line . "\n";
        }
    }
} else {
    echo "Aucun lot trouv√© ou erreur de requ√™te\n";
}

echo "\nüîç √âTAPE 3: V√©rification des files d'attente...\n";

$fileCommand = "php bin/console doctrine:query:sql \"SELECT id, lot_id, user_id, position, statut FROM file_attente ORDER BY created_at DESC LIMIT 3\"";
exec($fileCommand, $fileOutput, $fileReturnCode);

if ($fileReturnCode === 0 && !empty($fileOutput)) {
    echo "Files d'attente :\n";
    foreach ($fileOutput as $line) {
        if (strpos($line, '|') !== false) {
            echo "- " . $line . "\n";
        }
    }
} else {
    echo "Aucune file d'attente trouv√©e ou erreur de requ√™te\n";
}

echo "\nüìä R√âSUM√â:\n";
echo "- Logs de suppression: " . (count($deleteLogs) > 0 ? "‚úÖ PR√âSENTS" : "‚ùå ABSENTS") . "\n";
echo "- Logs de lib√©ration: " . (count($libererLogs) > 0 ? "‚úÖ PR√âSENTS" : "‚ùå ABSENTS") . "\n";

if (count($deleteLogs) == 0) {
    echo "\n‚ö†Ô∏è PROBL√àME D√âTECT√â !\n";
    echo "La m√©thode deleteEntity n'est pas appel√©e par EasyAdmin.\n";
    echo "Il faut v√©rifier la configuration EasyAdmin.\n";
} else {
    echo "\n‚úÖ LOGS PR√âSENTS !\n";
    echo "La logique de suppression fonctionne.\n";
}

echo "\n=== FIN DE LA V√âRIFICATION ===\n";
