<?php

require_once __DIR__ . '/vendor/autoload.php';

use Symfony\Component\Dotenv\Dotenv;
use Doctrine\ORM\EntityManagerInterface;
use App\Entity\Lot;
use App\Entity\User;
use App\Entity\Commande;
use App\Repository\LotRepository;
use App\Repository\UserRepository;
use App\Repository\CommandeRepository;

// Charger les variables d'environnement
$dotenv = new Dotenv();
$dotenv->load(__DIR__ . '/.env');

// Initialiser Symfony
$kernel = new \App\Kernel($_ENV['APP_ENV'] ?? 'dev', (bool) ($_ENV['APP_DEBUG'] ?? true));
$kernel->boot();

$container = $kernel->getContainer();
$entityManager = $container->get('doctrine.orm.entity_manager');

// R√©cup√©rer les repositories
$lotRepository = $entityManager->getRepository(Lot::class);
$userRepository = $entityManager->getRepository(User::class);
$commandeRepository = $entityManager->getRepository(Commande::class);

echo "=== V√âRIFICATION AVERTISSEMENT COMMANDES NON HONOR√âES ===\n\n";

$testsReussis = 0;
$testsTotal = 0;

// Fonction pour compter les tests
function testResult($description, $condition, $details = '') {
    global $testsReussis, $testsTotal;
    $testsTotal++;
    
    if ($condition) {
        $testsReussis++;
        echo "‚úÖ {$description}\n";
        if ($details) echo "   {$details}\n";
    } else {
        echo "‚ùå {$description}\n";
        if ($details) echo "   {$details}\n";
    }
    echo "\n";
}

// 1. V√âRIFICATION TEMPLATE CONFIRMATION SIMPLE
echo "1. V√âRIFICATION TEMPLATE CONFIRMATION SIMPLE\n";
echo "==============================================\n";

$templateConfirmation = file_get_contents('templates/emails/commande_confirmation.html.twig');

testResult(
    "Template confirmation existe",
    file_exists('templates/emails/commande_confirmation.html.twig'),
    "Fichier pr√©sent"
);

testResult(
    "Avertissement pr√©sent dans template confirmation",
    strpos($templateConfirmation, 'Avertissement Important') !== false,
    "Section d'avertissement trouv√©e"
);

testResult(
    "Politique de non-paiement mentionn√©e",
    strpos($templateConfirmation, '3 commandes') !== false,
    "Limite de 3 commandes non honor√©es"
);

testResult(
    "Risque de bannissement mentionn√©",
    strpos($templateConfirmation, 'banni d√©finitivement') !== false,
    "Cons√©quence du non-paiement"
);

testResult(
    "Engagement de paiement mentionn√©",
    strpos($templateConfirmation, 'Engagement de paiement') !== false,
    "Engagement clairement d√©fini"
);

testResult(
    "Conseil donn√© aux utilisateurs",
    strpos($templateConfirmation, 'Conseil :') !== false,
    "Guidance pour √©viter les probl√®mes"
);

echo "\n";

// 2. V√âRIFICATION TEMPLATE CONFIRMATION MULTIPLE
echo "2. V√âRIFICATION TEMPLATE CONFIRMATION MULTIPLE\n";
echo "================================================\n";

$templateConfirmationMultiple = file_get_contents('templates/emails/commande_multiple_confirmation.html.twig');

testResult(
    "Template confirmation multiple existe",
    file_exists('templates/emails/commande_multiple_confirmation.html.twig'),
    "Fichier pr√©sent"
);

testResult(
    "Avertissement pr√©sent dans template multiple",
    strpos($templateConfirmationMultiple, 'Avertissement Important') !== false,
    "Section d'avertissement trouv√©e"
);

testResult(
    "Politique de non-paiement mentionn√©e (multiple)",
    strpos($templateConfirmationMultiple, '3 commandes') !== false,
    "Limite de 3 commandes non honor√©es"
);

testResult(
    "Risque de bannissement mentionn√© (multiple)",
    strpos($templateConfirmationMultiple, 'banni d√©finitivement') !== false,
    "Cons√©quence du non-paiement"
);

testResult(
    "Engagement de paiement mentionn√© (multiple)",
    strpos($templateConfirmationMultiple, 'Engagement de paiement') !== false,
    "Engagement clairement d√©fini"
);

testResult(
    "Conseil donn√© aux utilisateurs (multiple)",
    strpos($templateConfirmationMultiple, 'Conseil :') !== false,
    "Guidance pour √©viter les probl√®mes"
);

echo "\n";

// 3. V√âRIFICATION CONTENU D√âTAILL√â
echo "3. V√âRIFICATION CONTENU D√âTAILL√â\n";
echo "===================================\n";

// V√©rifier les √©l√©ments cl√©s de l'avertissement
$elementsAvertissement = [
    '‚ö†Ô∏è Avertissement Important' => 'Titre de la section',
    'Engagement de paiement' => 'Engagement de l\'utilisateur',
    '3 commandes' => 'Limite de commandes non honor√©es',
    'banni d√©finitivement' => 'Cons√©quence du non-paiement',
    'Ne passez commande que si' => 'Conseil pr√©ventif',
    'contactez-nous avant la commande' => 'Alternative propos√©e'
];

foreach ($elementsAvertissement as $element => $description) {
    $presentSimple = strpos($templateConfirmation, $element) !== false;
    $presentMultiple = strpos($templateConfirmationMultiple, $element) !== false;
    
    testResult(
        "√âl√©ment '{$description}' pr√©sent",
        $presentSimple && $presentMultiple,
        $presentSimple && $presentMultiple ? "Pr√©sent dans les deux templates" : "Manquant dans au moins un template"
    );
}

echo "\n";

// 4. V√âRIFICATION STYLE ET PR√âSENTATION
echo "4. V√âRIFICATION STYLE ET PR√âSENTATION\n";
echo "========================================\n";

testResult(
    "Style d'avertissement coh√©rent",
    strpos($templateConfirmation, 'background: #fff3cd') !== false && strpos($templateConfirmation, 'border: 2px solid #ffc107') !== false,
    "Couleur d'avertissement jaune/orange"
);

testResult(
    "Style d'avertissement coh√©rent (multiple)",
    strpos($templateConfirmationMultiple, 'background: #fff3cd') !== false && strpos($templateConfirmationMultiple, 'border: 2px solid #ffc107') !== false,
    "Couleur d'avertissement jaune/orange"
);

testResult(
    "Ic√¥ne d'avertissement pr√©sente",
    strpos($templateConfirmation, '‚ö†Ô∏è') !== false,
    "Ic√¥ne d'avertissement dans le titre"
);

testResult(
    "Ic√¥ne d'avertissement pr√©sente (multiple)",
    strpos($templateConfirmationMultiple, '‚ö†Ô∏è') !== false,
    "Ic√¥ne d'avertissement dans le titre"
);

echo "\n";

// 5. SIMULATION D'ENVOI D'EMAIL
echo "5. SIMULATION D'ENVOI D'EMAIL\n";
echo "===============================\n";

// Trouver un utilisateur et un lot pour la simulation
$user = $userRepository->createQueryBuilder('u')
    ->setMaxResults(1)
    ->getQuery()
    ->getOneOrNullResult();

$lot = $lotRepository->createQueryBuilder('l')
    ->setMaxResults(1)
    ->getQuery()
    ->getOneOrNullResult();

if ($user && $lot) {
    echo "üé≠ Simulation d'envoi d'email de confirmation...\n";
    
    // Simuler les donn√©es d'une commande
    $commandeSimulee = [
        'numeroCommande' => 'CMD-TEST-' . date('YmdHis'),
        'prixTotal' => $lot->getPrix(),
        'createdAt' => new \DateTimeImmutable(),
        'quantite' => 1,
        'prixUnitaire' => $lot->getPrix()
    ];
    
    echo "   - Utilisateur : {$user->getEmail()}\n";
    echo "   - Lot : {$lot->getName()}\n";
    echo "   - Montant : {$commandeSimulee['prixTotal']}‚Ç¨\n";
    echo "   - Num√©ro commande : {$commandeSimulee['numeroCommande']}\n";
    
    testResult(
        "Donn√©es de simulation valides",
        true,
        "Simulation pr√™te pour test d'envoi"
    );
} else {
    testResult(
        "Donn√©es de simulation valides",
        false,
        "Utilisateur ou lot manquant pour la simulation"
    );
}

echo "\n";

// 6. V√âRIFICATION CONFORMIT√â L√âGALE
echo "6. V√âRIFICATION CONFORMIT√â L√âGALE\n";
echo "===================================\n";

testResult(
    "Avertissement clair et visible",
    strpos($templateConfirmation, 'font-weight: bold') !== false,
    "Texte en gras pour la visibilit√©"
);

testResult(
    "Termes pr√©cis et non ambigus",
    strpos($templateConfirmation, 'susceptible d\'√™tre') !== false,
    "Terminologie appropri√©e (susceptible vs sera)"
);

testResult(
    "Alternative propos√©e",
    strpos($templateConfirmation, 'contactez-nous avant') !== false,
    "Solution alternative offerte"
);

testResult(
    "Conseil pr√©ventif",
    strpos($templateConfirmation, 'certain de pouvoir') !== false,
    "Guidance pr√©ventive"
);

echo "\n";

// 7. R√âSUM√â FINAL
echo "7. R√âSUM√â FINAL\n";
echo "=================\n";

$pourcentageReussite = ($testsReussis / $testsTotal) * 100;

echo "üìä R√âSULTATS DES TESTS :\n";
echo "   - Tests r√©ussis : {$testsReussis}/{$testsTotal}\n";
echo "   - Pourcentage de r√©ussite : " . number_format($pourcentageReussite, 1) . "%\n";

if ($pourcentageReussite >= 90) {
    echo "   - Status : ‚úÖ EXCELLENT\n";
} elseif ($pourcentageReussite >= 80) {
    echo "   - Status : ‚úÖ TR√àS BON\n";
} elseif ($pourcentageReussite >= 70) {
    echo "   - Status : ‚ö†Ô∏è  BON\n";
} else {
    echo "   - Status : ‚ùå PROBL√àMES D√âTECT√âS\n";
}

echo "\n";

echo "‚úÖ AVERTISSEMENTS IMPL√âMENT√âS :\n";
echo "   üìß Template confirmation simple\n";
echo "   üìß Template confirmation multiple\n";
echo "   ‚ö†Ô∏è  Section d'avertissement visible\n";
echo "   üî¢ Limite de 3 commandes non honor√©es\n";
echo "   üö´ Risque de bannissement d√©finitif\n";
echo "   üí° Conseils pr√©ventifs\n";
echo "   üìû Alternative de contact\n";

echo "\n";

echo "üéØ AVANTAGES DE CETTE MESURE :\n";
echo "   üõ°Ô∏è  Protection contre les commandes fant√¥mes\n";
echo "   üìä R√©duction des commandes non honor√©es\n";
echo "   ‚öñÔ∏è  Transparence sur les cons√©quences\n";
echo "   üéì √âducation des utilisateurs\n";
echo "   üîí Protection de la plateforme\n";

echo "\n=== FIN DE LA V√âRIFICATION ===\n";

if ($pourcentageReussite >= 90) {
    echo "\nüéâ AVERTISSEMENTS IMPL√âMENT√âS AVEC SUCC√àS !\n";
    echo "   - Tous les templates mis √† jour\n";
    echo "   - Avertissement clair et visible\n";
    echo "   - Politique de non-paiement d√©finie\n";
    echo "   - Protection de la plateforme renforc√©e\n";
    echo "   - Conformit√© l√©gale respect√©e\n";
} else {
    echo "\n‚ö†Ô∏è  ATTENTION : Quelques probl√®mes d√©tect√©s\n";
    echo "   - V√©rifiez les tests √©chou√©s ci-dessus\n";
    echo "   - Corrigez les probl√®mes avant la production\n";
}

